2022-11-07 00:28:41.929 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 00:28:41.935 [nioEventLoopGroup-5-3] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 3ms
2022-11-07 00:28:41.937 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"292c245d-12c4-40e6-94d6-2d156d3b3fb8"}
2022-11-07 00:30:01.631 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 00:30:01.633 [nioEventLoopGroup-5-4] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 1ms
2022-11-07 00:30:01.634 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"b7f73149-2a2a-46cd-8975-7e4c5a5dfd80"}
2022-11-07 00:42:40.037 [nioEventLoopGroup-5-5] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 00:42:40.042 [nioEventLoopGroup-5-5] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 4ms
2022-11-07 00:42:40.044 [nioEventLoopGroup-5-5] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"add21976-eb54-4cec-89c9-b166276ac6c0"}
2022-11-07 00:45:35.840 [nioEventLoopGroup-5-6] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 00:45:35.865 [nioEventLoopGroup-5-6] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 23ms
2022-11-07 00:45:35.867 [nioEventLoopGroup-5-6] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"a8aecf5d-e615-484f-ab44-37d8f00a6523"}
2022-11-07 00:53:44.966 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 00:53:44.969 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 09:56:41.460 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 3028 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 09:56:41.461 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 09:56:41.896 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 09:56:41.898 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 09:56:41.911 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 09:56:42.212 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 09:56:42.216 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 09:56:42.216 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 09:56:42.255 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 09:56:42.256 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 763 ms
2022-11-07 09:56:43.578 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 09:56:43.798 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 09:56:43.844 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 09:56:43.845 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 09:56:43.850 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 09:56:43.860 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 09:56:43.908 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 2.69 seconds (JVM running for 2.962)
2022-11-07 09:56:43.909 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 09:56:43.911 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 09:56:46.034 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 09:56:46.048 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 09:56:46.111 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 09:56:46.140 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 101ms
2022-11-07 09:56:46.337 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"cc27dce4-f593-4ca7-9c5d-8c12ae32fa83"}
2022-11-07 11:15:49.026 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 11:15:49.032 [nioEventLoopGroup-5-2] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 5ms
2022-11-07 11:15:49.036 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"25198fa5-4b78-46ed-ab24-8d2a59bc56ce"}
2022-11-07 11:30:55.491 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 11:30:55.495 [nioEventLoopGroup-5-3] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 3ms
2022-11-07 11:30:55.497 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"ea7e31f5-1cfb-40b1-814e-90a8ce173023"}
2022-11-07 12:27:53.470 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 12:27:53.477 [nioEventLoopGroup-5-4] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 4ms
2022-11-07 12:27:53.479 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"5e049cd7-08af-47cd-8c88-ae7aeb54be40"}
2022-11-07 12:28:13.631 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":8,"username":"zhangyun"}
2022-11-07 12:28:13.634 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":301,"messageType":7,"msg":"消息内容不完整"}
2022-11-07 12:33:36.236 [nioEventLoopGroup-5-5] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 12:33:36.243 [nioEventLoopGroup-5-5] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 5ms
2022-11-07 12:33:36.245 [nioEventLoopGroup-5-5] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"3b0f3cd8-6132-4a48-ac84-e84b05be74b7"}
2022-11-07 12:33:56.887 [nioEventLoopGroup-5-5] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":8,"token":"3b0f3cd8-6132-4a48-ac84-e84b05be74b7","username":"zhangyun"}
2022-11-07 12:36:07.023 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 12:36:07.027 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 14:22:02.350 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 44638 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 14:22:02.352 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 14:22:02.815 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 14:22:02.816 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 14:22:02.830 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 14:22:03.167 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 14:22:03.172 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 14:22:03.172 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 14:22:03.223 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 14:22:03.223 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 842 ms
2022-11-07 14:22:04.568 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 14:22:04.805 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 14:22:04.861 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 14:22:04.862 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 14:22:04.868 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 14:22:04.878 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 14:22:04.931 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 2.828 seconds (JVM running for 3.101)
2022-11-07 14:22:04.932 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 14:22:04.933 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 14:22:24.425 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 14:22:24.439 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 14:22:24.501 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 14:22:24.529 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 99ms
2022-11-07 14:22:24.731 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"2767af5a-396c-402c-81e2-9883bd760d4b"}
2022-11-07 14:24:16.505 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 14:24:16.511 [nioEventLoopGroup-5-2] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 5ms
2022-11-07 14:24:16.513 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"c2d16eb5-e126-4baf-be3b-1eb9eb29c27d"}
2022-11-07 14:33:16.795 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m22s82ms).
2022-11-07 14:51:31.157 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeMacBook-Air.local with PID 50147 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 14:51:31.158 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 14:51:31.574 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 14:51:31.575 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 14:51:31.589 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 14:51:31.892 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 14:51:31.897 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 14:51:31.897 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 14:51:31.944 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 14:51:31.944 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 760 ms
2022-11-07 14:51:33.022 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 14:51:33.226 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 14:51:33.268 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2022-11-07 14:51:33.275 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2022-11-07 14:51:33.281 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-11-07 14:51:33.290 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2022-11-07 14:52:17.226 [lettuce-eventExecutorLoop-1-3] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was 127.0.0.1/127.0.0.1:6379
2022-11-07 14:52:17.239 [lettuce-kqueueEventLoop-6-2] WARN  io.lettuce.core.protocol.ConnectionWatchdog - Cannot reconnect to [127.0.0.1:6379]: finishConnect(..) failed: Connection refused: /127.0.0.1:6379
2022-11-07 14:52:23.025 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 14:52:23.050 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 14:54:31.776 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeMacBook-Air.local with PID 1585 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 14:54:31.778 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 14:54:32.362 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 14:54:32.363 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 14:54:32.383 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-11-07 14:54:32.812 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 14:54:32.823 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 14:54:32.823 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 14:54:32.906 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 14:54:32.909 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1090 ms
2022-11-07 14:54:34.211 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 14:54:34.480 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 14:54:34.542 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 14:54:34.543 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 14:54:34.552 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 14:54:34.565 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 14:54:34.636 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 3.168 seconds (JVM running for 4.462)
2022-11-07 14:54:34.637 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 14:54:34.639 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 14:55:08.161 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 14:55:08.178 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 14:55:08.260 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 14:55:08.304 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 138ms
2022-11-07 14:55:08.536 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"1f57d362-7265-43c7-a84d-e34cb8d6df77"}
2022-11-07 14:59:42.784 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":8,"token":"1f57d362-7265-43c7-a84d-e34cb8d6df77","username":"zhangyun"}
2022-11-07 15:01:35.389 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 15:01:35.408 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 15:01:38.663 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeMacBook-Air.local with PID 2986 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 15:01:38.664 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 15:01:39.080 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 15:01:39.081 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 15:01:39.094 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 15:01:39.439 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 15:01:39.444 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 15:01:39.444 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 15:01:39.483 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 15:01:39.483 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 790 ms
2022-11-07 15:01:43.307 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 15:01:43.851 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 15:01:43.954 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 15:01:43.955 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 15:01:43.963 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 15:01:43.984 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 15:01:44.050 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 5.619 seconds (JVM running for 5.895)
2022-11-07 15:01:44.052 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 15:01:44.053 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 15:04:23.002 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeMacBook-Air.local with PID 3529 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 15:04:23.004 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 15:04:23.452 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 15:04:23.454 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 15:04:23.467 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 15:04:23.806 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 15:04:23.810 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 15:04:23.811 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 15:04:23.850 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 15:04:23.850 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 816 ms
2022-11-07 15:04:25.783 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 15:04:26.014 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 15:04:26.064 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 15:04:26.065 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 15:04:26.071 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 15:04:26.082 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 15:04:26.134 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 3.432 seconds (JVM running for 3.787)
2022-11-07 15:04:26.135 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 15:04:26.136 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 15:04:32.629 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 15:04:32.644 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 15:04:32.707 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 15:04:32.736 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 103ms
2022-11-07 15:04:32.931 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"bb208574-0fbe-4576-9a0d-09b2baf33d0d"}
2022-11-07 15:05:29.978 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceName":"macbook air m1","messageType":8,"token":"bb208574-0fbe-4576-9a0d-09b2baf33d0d","username":"zhangyun"}
2022-11-07 15:05:30.018 [nioEventLoopGroup-5-1] INFO  c.z.f.server.config.MetaObjectHandlerConfig - insert org.apache.ibatis.reflection.MetaObject@60ff5f8e, current: 2022-11-07 15:05:30.018
2022-11-07 15:05:30.026 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: MetaObjectHandlerConfig.insertFill, 参数: metaObject:{"collection":false,"getterNames":["modifiedTime","createTime","log","userId","deviceId","deviceName"],"objectFactory":{},"objectWrapper":{"collection":false,"getterNames":["modifiedTime","createTime","log","userId","deviceId","deviceName"],"setterNames":["modifiedTime","createTime","log","deviceId","userId","deviceName"]},"objectWrapperFactory":{},"originalObject":{"createTime":1667804730018,"deviceId":"55136e53-18b8-4ade-9dde-04865ba656a6","deviceName":"macbook air m1","modifiedTime":1667804730018,"userId":1},"reflectorFactory":{"classCacheEnabled":true},"setterNames":["modifiedTime","createTime","log","deviceId","userId","deviceName"]} ====> null, 时间: 1ms
2022-11-07 15:05:30.030 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"deviceId":"55136e53-18b8-4ade-9dde-04865ba656a6","messageType":9}
2022-11-07 15:33:10.562 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 15:33:10.564 [nioEventLoopGroup-5-2] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 2ms
2022-11-07 15:33:10.565 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"f91cc112-3b3e-4da9-9881-da09d6036594"}
2022-11-07 15:33:56.789 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceName":"macbook air m1","messageType":8,"token":"f91cc112-3b3e-4da9-9881-da09d6036594","username":"zhangyun"}
2022-11-07 15:33:56.796 [nioEventLoopGroup-5-2] INFO  c.z.f.server.config.MetaObjectHandlerConfig - insert org.apache.ibatis.reflection.MetaObject@3f062106, current: 2022-11-07 15:33:56.796
2022-11-07 15:33:56.797 [nioEventLoopGroup-5-2] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: MetaObjectHandlerConfig.insertFill, 参数: metaObject:{"collection":false,"getterNames":["modifiedTime","createTime","log","userId","deviceId","deviceName"],"objectFactory":{},"objectWrapper":{"collection":false,"getterNames":["modifiedTime","createTime","log","userId","deviceId","deviceName"],"setterNames":["modifiedTime","createTime","log","deviceId","userId","deviceName"]},"objectWrapperFactory":{},"originalObject":{"createTime":1667806436796,"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","deviceName":"macbook air m1","modifiedTime":1667806436796,"userId":1},"reflectorFactory":{"classCacheEnabled":true},"setterNames":["modifiedTime","createTime","log","deviceId","userId","deviceName"]} ====> null, 时间: 0ms
2022-11-07 15:33:56.801 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","messageType":9}
2022-11-07 15:46:34.596 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 15:46:34.601 [nioEventLoopGroup-5-3] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 4ms
2022-11-07 15:46:34.603 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"messageType":6,"msg":"登录成功！","token":"f6b72417-12a8-40f5-80c0-d62056f49617"}
2022-11-07 17:17:28.006 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m24s431ms).
2022-11-07 17:54:18.203 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 17:54:18.206 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 17:54:22.411 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 35892 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 17:54:22.413 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 17:54:22.846 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 17:54:22.847 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 17:54:22.862 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-11-07 17:54:23.224 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 17:54:23.230 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 17:54:23.230 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 17:54:23.269 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 17:54:23.270 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 827 ms
2022-11-07 17:54:24.906 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 17:54:25.163 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 17:54:25.227 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 17:54:25.228 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 17:54:25.236 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 17:54:25.249 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 17:54:25.316 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 3.17 seconds (JVM running for 3.617)
2022-11-07 17:54:25.317 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 17:54:25.319 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 17:54:34.954 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 17:54:34.969 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 17:54:35.049 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 17:54:35.082 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 123ms
2022-11-07 17:54:35.325 [nioEventLoopGroup-5-1] WARN  io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
### The error may exist in com/zhangyun/filecloud/server/mapper/DeviceMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT device_id AS id,modified_time,create_time,root_path,device_name,user_id,device_id FROM device    WHERE deviceId = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy77.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:158)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:76)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy85.selectByMap(Unknown Source)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl.selectDeviceByDeviceId(DeviceServiceImpl.java:45)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl$$FastClassBySpringCGLIB$$216a8085.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl$$EnhancerBySpringCGLIB$$6067cf7d.selectDeviceByDeviceId(<generated>)
	at com.zhangyun.filecloud.server.handler.LoginHandler.channelRead0(LoginHandler.java:71)
	at com.zhangyun.filecloud.server.handler.LoginHandler.channelRead0(LoginHandler.java:30)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.LoginHandler$$EnhancerBySpringCGLIB$$2765f5c0.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.CompareHandler$$EnhancerBySpringCGLIB$$706cfa0c.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.UploadHandler$$EnhancerBySpringCGLIB$$61450a9e.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler.channelRead0(MessageFilterHandler.java:36)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler.channelRead0(MessageFilterHandler.java:22)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler$$EnhancerBySpringCGLIB$$ed258fde.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:280)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy122.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted
2022-11-07 17:58:24.241 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 17:58:24.246 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 17:58:46.240 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 36772 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 17:58:46.241 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 17:58:46.663 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 17:58:46.665 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 17:58:46.678 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 17:58:47.017 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 17:58:47.022 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 17:58:47.022 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 17:58:47.058 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 17:58:47.059 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 791 ms
2022-11-07 17:58:48.606 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 17:58:48.830 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 17:58:48.879 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 17:58:48.880 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 17:58:48.886 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 17:58:48.897 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 17:58:48.948 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 2.953 seconds (JVM running for 3.292)
2022-11-07 17:58:48.949 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 17:58:48.951 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 17:59:04.897 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 17:59:04.911 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 17:59:04.990 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 17:59:05.020 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 119ms
2022-11-07 17:59:05.264 [nioEventLoopGroup-5-1] WARN  io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
### The error may exist in com/zhangyun/filecloud/server/mapper/DeviceMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT device_id AS id,modified_time,create_time,root_path,device_name,user_id,device_id FROM device    WHERE deviceId = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy77.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:158)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:76)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy85.selectByMap(Unknown Source)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl.selectDeviceByDeviceId(DeviceServiceImpl.java:45)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl$$FastClassBySpringCGLIB$$216a8085.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl$$EnhancerBySpringCGLIB$$6067cf7d.selectDeviceByDeviceId(<generated>)
	at com.zhangyun.filecloud.server.handler.LoginHandler.channelRead0(LoginHandler.java:71)
	at com.zhangyun.filecloud.server.handler.LoginHandler.channelRead0(LoginHandler.java:30)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.LoginHandler$$EnhancerBySpringCGLIB$$c3784806.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.CompareHandler$$EnhancerBySpringCGLIB$$c7f4c52.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.UploadHandler$$EnhancerBySpringCGLIB$$fd575ce4.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler.channelRead0(MessageFilterHandler.java:36)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler.channelRead0(MessageFilterHandler.java:22)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler$$EnhancerBySpringCGLIB$$8937e224.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:280)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy122.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted
2022-11-07 18:01:31.060 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 18:01:31.064 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 18:01:34.532 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 37319 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 18:01:34.533 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 18:01:34.933 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 18:01:34.934 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 18:01:34.946 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 18:01:35.256 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 18:01:35.261 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 18:01:35.261 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 18:01:35.302 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 18:01:35.302 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 741 ms
2022-11-07 18:01:36.432 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 18:01:36.658 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 18:01:36.705 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 18:01:36.705 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 18:01:36.711 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 18:01:36.722 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 18:01:36.770 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 2.55 seconds (JVM running for 2.905)
2022-11-07 18:01:36.771 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 18:01:36.772 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 18:01:43.494 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 37348 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 18:01:43.495 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 18:01:43.934 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 18:01:43.936 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 18:01:43.950 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-11-07 18:01:44.292 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 18:01:44.297 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 18:01:44.297 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 18:01:44.335 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 18:01:44.335 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 809 ms
2022-11-07 18:01:45.495 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 18:01:45.817 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 18:01:45.918 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 18:01:45.919 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 18:01:45.928 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 18:01:45.949 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 18:01:46.013 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 2.812 seconds (JVM running for 3.212)
2022-11-07 18:01:46.015 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 18:01:46.016 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 18:01:49.831 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 18:01:49.855 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 18:01:49.919 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 18:01:49.948 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 113ms
2022-11-07 18:01:50.190 [nioEventLoopGroup-5-1] WARN  io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
### The error may exist in com/zhangyun/filecloud/server/mapper/DeviceMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT id,modified_time,create_time,root_path,device_name,user_id,device_id FROM device    WHERE deviceId = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy77.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:158)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:76)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy85.selectByMap(Unknown Source)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl.selectDeviceByDeviceId(DeviceServiceImpl.java:45)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl$$FastClassBySpringCGLIB$$216a8085.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl$$EnhancerBySpringCGLIB$$52e61b25.selectDeviceByDeviceId(<generated>)
	at com.zhangyun.filecloud.server.handler.LoginHandler.channelRead0(LoginHandler.java:71)
	at com.zhangyun.filecloud.server.handler.LoginHandler.channelRead0(LoginHandler.java:30)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.LoginHandler$$EnhancerBySpringCGLIB$$df452355.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.CompareHandler$$EnhancerBySpringCGLIB$$284c27a1.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.UploadHandler$$EnhancerBySpringCGLIB$$19243833.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler.channelRead0(MessageFilterHandler.java:36)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler.channelRead0(MessageFilterHandler.java:22)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler$$EnhancerBySpringCGLIB$$a504bd73.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:280)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'deviceId' in 'where clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy122.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 98 common frames omitted
2022-11-07 18:03:17.581 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 18:03:17.587 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 18:03:20.367 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 37669 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 18:03:20.373 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 18:03:20.810 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 18:03:20.812 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 18:03:20.825 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 18:03:21.166 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 18:03:21.171 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 18:03:21.171 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 18:03:21.210 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 18:03:21.210 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 811 ms
2022-11-07 18:03:22.373 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 18:03:22.658 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 18:03:22.724 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 18:03:22.725 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 18:03:22.731 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 18:03:22.747 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 18:03:22.805 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 2.7 seconds (JVM running for 3.017)
2022-11-07 18:03:22.806 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 18:03:22.807 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 18:03:42.464 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 18:03:42.479 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 18:03:42.543 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 18:03:42.573 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 104ms
2022-11-07 18:03:42.810 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"d438a633-3b37-4533-8125-d8ff39271dcb"}
2022-11-07 18:05:24.947 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 18:05:24.951 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 18:05:26.997 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 38078 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 18:05:26.999 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 18:05:27.477 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 18:05:27.478 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 18:05:27.490 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 18:05:27.784 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 18:05:27.789 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 18:05:27.789 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 18:05:27.828 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 18:05:27.829 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 797 ms
2022-11-07 18:05:29.376 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 18:05:29.592 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 18:05:29.645 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 18:05:29.645 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 18:05:29.651 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 18:05:29.661 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 18:05:29.705 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 3.069 seconds (JVM running for 3.436)
2022-11-07 18:05:29.706 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 18:05:29.707 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 18:05:41.471 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 18:05:41.485 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 18:05:41.539 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 18:05:41.566 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 90ms
2022-11-07 18:05:41.768 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"f241048d-89f2-45cb-9f4b-71295c0b06e3"}
2022-11-07 18:07:28.119 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 18:07:28.121 [nioEventLoopGroup-5-2] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 2ms
2022-11-07 18:07:28.123 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"2b5ee3e5-f234-4040-a160-6cf9dcc092c3"}
2022-11-07 18:08:04.255 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceName":"macbook air m1","messageType":8,"token":"2b5ee3e5-f234-4040-a160-6cf9dcc092c3","username":"zhangyun"}
2022-11-07 18:08:04.282 [nioEventLoopGroup-5-2] WARN  io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'id' of 'class com.zhangyun.filecloud.server.entity.Device' with value '1589560306284511233' Cause: java.lang.IllegalArgumentException: argument type mismatch
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:78)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy77.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:58)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy85.insert(Unknown Source)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl.createDevice(DeviceServiceImpl.java:37)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl$$FastClassBySpringCGLIB$$216a8085.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.zhangyun.filecloud.server.service.impl.DeviceServiceImpl$$EnhancerBySpringCGLIB$$58616a6c.createDevice(<generated>)
	at com.zhangyun.filecloud.server.handler.RegisterDeviceHandler.channelRead0(RegisterDeviceHandler.java:36)
	at com.zhangyun.filecloud.server.handler.RegisterDeviceHandler.channelRead0(RegisterDeviceHandler.java:23)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.RegisterDeviceHandler$$EnhancerBySpringCGLIB$$30e09ee1.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.LoginHandler$$EnhancerBySpringCGLIB$$61561b8b.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.CompareHandler$$EnhancerBySpringCGLIB$$aa5d1fd7.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.UploadHandler$$EnhancerBySpringCGLIB$$9b353069.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler.channelRead0(MessageFilterHandler.java:36)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler.channelRead0(MessageFilterHandler.java:22)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.SimpleChannelInboundHandler$$FastClassBySpringCGLIB$$12f5be83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.zhangyun.filecloud.server.handler.MessageFilterHandler$$EnhancerBySpringCGLIB$$2715b5a9.channelRead(<generated>)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:280)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'id' of 'class com.zhangyun.filecloud.server.entity.Device' with value '1589560306284511233' Cause: java.lang.IllegalArgumentException: argument type mismatch
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:185)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:59)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:140)
	at com.baomidou.mybatisplus.core.MybatisDefaultParameterHandler.populateKeys(MybatisDefaultParameterHandler.java:181)
	at com.baomidou.mybatisplus.core.MybatisDefaultParameterHandler.processBatch(MybatisDefaultParameterHandler.java:123)
	at com.baomidou.mybatisplus.core.MybatisDefaultParameterHandler.<init>(MybatisDefaultParameterHandler.java:52)
	at com.baomidou.mybatisplus.core.MybatisXMLLanguageDriver.createParameterHandler(MybatisXMLLanguageDriver.java:34)
	at com.baomidou.mybatisplus.core.MybatisXMLLanguageDriver.createParameterHandler(MybatisXMLLanguageDriver.java:28)
	at org.apache.ibatis.session.Configuration.newParameterHandler(Configuration.java:579)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:69)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:41)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:592)
	at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doUpdate(MybatisSimpleExecutor.java:52)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 111 common frames omitted
Caused by: java.lang.IllegalArgumentException: argument type mismatch
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.reflection.invoker.MethodInvoker.invoke(MethodInvoker.java:44)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:180)
	... 133 common frames omitted
2022-11-07 18:11:38.011 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 18:11:38.016 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 18:11:40.791 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 39303 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 18:11:40.793 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 18:11:41.224 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 18:11:41.226 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 18:11:41.238 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 18:11:41.551 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 18:11:41.555 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 18:11:41.555 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 18:11:41.592 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 18:11:41.592 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 770 ms
2022-11-07 18:11:43.537 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 18:11:43.753 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 18:11:43.797 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 18:11:43.797 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 18:11:43.802 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 18:11:43.812 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 18:11:43.856 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 3.432 seconds (JVM running for 3.778)
2022-11-07 18:11:43.857 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 18:11:43.859 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 18:11:45.666 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 39322 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 18:11:45.667 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 18:11:46.104 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 18:11:46.106 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 18:11:46.120 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-11-07 18:11:46.477 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 18:11:46.482 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 18:11:46.482 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 18:11:46.520 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 18:11:46.520 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 823 ms
2022-11-07 18:11:47.695 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 18:11:47.995 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 18:11:48.056 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 18:11:48.057 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 18:11:48.065 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 18:11:48.081 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 18:11:48.157 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 2.759 seconds (JVM running for 3.161)
2022-11-07 18:11:48.158 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 18:11:48.160 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 18:11:52.381 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"07adced7-45da-4fc1-89f4-f72547d1ad0f","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 18:11:52.396 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 18:11:52.471 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 18:11:52.501 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 115ms
2022-11-07 18:11:52.714 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"acb7463d-a7f8-4c31-aece-2fd37ecf884f"}
2022-11-07 18:12:09.489 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceName":"macbook air m1","messageType":8,"token":"acb7463d-a7f8-4c31-aece-2fd37ecf884f","username":"zhangyun"}
2022-11-07 18:12:09.507 [nioEventLoopGroup-5-1] INFO  c.z.f.server.config.MetaObjectHandlerConfig - insert org.apache.ibatis.reflection.MetaObject@48f54e0b, current: 2022-11-07 18:12:09.507
2022-11-07 18:12:09.518 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: MetaObjectHandlerConfig.insertFill, 参数: metaObject:{"collection":false,"getterNames":["modifiedTime","createTime","log","rootPath","userId","deviceId","deviceName"],"objectFactory":{},"objectWrapper":{"collection":false,"getterNames":["modifiedTime","createTime","log","rootPath","userId","deviceId","deviceName"],"setterNames":["modifiedTime","createTime","log","rootPath","deviceId","userId","deviceName"]},"objectWrapperFactory":{},"originalObject":{"createTime":1667815929507,"deviceId":"3a867941-9b8b-4ef6-9a5a-b6ff4debce33","deviceName":"macbook air m1","modifiedTime":1667815929507,"userId":1},"reflectorFactory":{"classCacheEnabled":true},"setterNames":["modifiedTime","createTime","log","rootPath","deviceId","userId","deviceName"]} ====> null, 时间: 2ms
2022-11-07 18:12:09.524 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"deviceId":"3a867941-9b8b-4ef6-9a5a-b6ff4debce33","messageType":9}
2022-11-07 19:34:05.363 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 19:34:05.366 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 19:34:09.001 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 54547 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 19:34:09.003 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 19:34:09.409 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 19:34:09.410 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 19:34:09.423 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 19:34:09.729 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 19:34:09.738 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 19:34:09.738 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 19:34:09.773 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 19:34:09.773 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 741 ms
2022-11-07 19:34:11.573 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 19:34:11.855 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 19:34:11.921 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 19:34:11.922 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 19:34:11.930 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 19:34:11.944 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 19:34:12.006 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 3.255 seconds (JVM running for 3.515)
2022-11-07 19:34:12.007 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 19:34:12.009 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 19:34:46.137 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 19:34:46.159 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 19:34:46.214 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 19:34:46.241 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 100ms
2022-11-07 19:34:46.431 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"37501a16-64da-4999-aa5f-d0fd4f72dba2"}
2022-11-07 19:35:17.592 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":8,"token":"37501a16-64da-4999-aa5f-d0fd4f72dba2","username":"zhangyun"}
2022-11-07 19:35:17.633 [nioEventLoopGroup-5-1] INFO  c.z.f.server.config.MetaObjectHandlerConfig - insert org.apache.ibatis.reflection.MetaObject@2fcc2d9a, current: 2022-11-07 19:35:17.633
2022-11-07 19:35:17.641 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: MetaObjectHandlerConfig.insertFill, 参数: metaObject:{"collection":false,"getterNames":["modifiedTime","createTime","log","rootPath","userId","deviceId","deviceName"],"objectFactory":{},"objectWrapper":{"collection":false,"getterNames":["modifiedTime","createTime","log","rootPath","userId","deviceId","deviceName"],"setterNames":["modifiedTime","createTime","log","rootPath","deviceId","userId","deviceName"]},"objectWrapperFactory":{},"originalObject":{"createTime":1667820917633,"deviceId":"c47b065a-e9ab-4247-979b-54a8609a4e63","modifiedTime":1667820917633,"userId":1},"reflectorFactory":{"classCacheEnabled":true},"setterNames":["modifiedTime","createTime","log","rootPath","deviceId","userId","deviceName"]} ====> null, 时间: 1ms
2022-11-07 19:35:17.648 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"deviceId":"c47b065a-e9ab-4247-979b-54a8609a4e63","messageType":9}
2022-11-07 19:44:18.359 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 19:44:18.365 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 19:44:21.205 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 56510 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 19:44:21.206 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 19:44:21.620 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 19:44:21.622 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 19:44:21.636 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-11-07 19:44:21.984 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 19:44:21.990 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 19:44:21.990 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 19:44:22.028 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 19:44:22.028 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 794 ms
2022-11-07 19:44:23.687 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 19:44:23.910 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 19:44:23.958 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 19:44:23.959 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 19:44:23.966 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 19:44:23.978 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 19:44:24.035 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 3.111 seconds (JVM running for 3.56)
2022-11-07 19:44:24.036 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 19:44:24.038 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 19:50:51.929 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"c47b065a-e9ab-4247-979b-54a8609a4e63","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 19:50:51.943 [nioEventLoopGroup-5-2] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 19:50:52.046 [nioEventLoopGroup-5-2] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 19:50:52.077 [nioEventLoopGroup-5-2] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 144ms
2022-11-07 19:50:52.286 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"fa9f74f5-49f2-40e5-b221-a8be9a031653"}
2022-11-07 19:53:02.270 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceName":"macbook air m1","messageType":8,"rootPath":"/Users/zhangyun/test","token":"fa9f74f5-49f2-40e5-b221-a8be9a031653","username":"zhangyun"}
2022-11-07 19:53:02.311 [nioEventLoopGroup-5-2] INFO  c.z.f.server.config.MetaObjectHandlerConfig - insert org.apache.ibatis.reflection.MetaObject@5d1a9a81, current: 2022-11-07 19:53:02.311
2022-11-07 19:53:02.319 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"deviceId":"09f6288f-0ff1-495c-9c73-b94b8359eb2b","messageType":9}
2022-11-07 19:57:47.673 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"09f6288f-0ff1-495c-9c73-b94b8359eb2b","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 19:57:47.677 [nioEventLoopGroup-5-3] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 3ms
2022-11-07 19:57:47.678 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"a0183b10-b1ba-4d3e-92b5-016191a77eb8"}
2022-11-07 20:00:06.302 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"09f6288f-0ff1-495c-9c73-b94b8359eb2b","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","token":"a0183b10-b1ba-4d3e-92b5-016191a77eb8","username":"zhangyun"}
2022-11-07 20:00:14.817 [nioEventLoopGroup-5-3] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 311ms
2022-11-07 20:05:01.468 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m52s436ms).
2022-11-07 20:05:01.468 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"e6f73d39-4c36-42e8-a143-1a9e18aa0cda"}
2022-11-07 20:05:01.471 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"09f6288f-0ff1-495c-9c73-b94b8359eb2b","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 20:05:03.606 [nioEventLoopGroup-5-4] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 3ms
2022-11-07 20:05:03.612 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":true,"messageType":6,"msg":"登录成功！","token":"c4ace062-c80c-49f0-97fe-0acae69eff14"}
2022-11-07 20:05:35.202 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"messageType":5,"password":"1120","username":"zhangyun"}
2022-11-07 20:05:35.208 [nioEventLoopGroup-5-4] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 5ms
2022-11-07 20:05:35.210 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","token":"987471ac-9e27-4d9c-a043-7f0b0e4f9efc"}
2022-11-07 20:06:09.189 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceName":"macbook air m1","messageType":8,"rootPath":"/Users/zhangyun/test","token":"987471ac-9e27-4d9c-a043-7f0b0e4f9efc","username":"zhangyun"}
2022-11-07 20:06:09.197 [nioEventLoopGroup-5-4] INFO  c.z.f.server.config.MetaObjectHandlerConfig - insert org.apache.ibatis.reflection.MetaObject@5f5ab902, current: 2022-11-07 20:06:09.197
2022-11-07 20:06:09.201 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"deviceId":"c1d20714-cff4-4ab0-a995-6777cc184d26","messageType":9}
2022-11-07 20:06:17.166 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"c1d20714-cff4-4ab0-a995-6777cc184d26","deviceName":"macbook air m1","messageType":5,"password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 20:06:17.171 [nioEventLoopGroup-5-4] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 4ms
2022-11-07 20:06:17.177 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":true,"messageType":6,"msg":"登录成功！","token":"2e015c12-94ad-493b-aa23-0f5822727956"}
2022-11-07 20:06:30.411 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-11-07 20:06:30.415 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-11-07 20:09:44.724 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Starting ServerApplication using Java 1.8.0_342 on zhangyundeAir.lan with PID 61598 (/Users/zhangyun/Documents/javaProject/FileCloud/server/target/classes started by zhangyun in /Users/zhangyun/Documents/javaProject/FileCloud)
2022-11-07 20:09:44.726 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - The following profiles are active: dev
2022-11-07 20:09:45.176 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-11-07 20:09:45.178 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-11-07 20:09:45.196 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-11-07 20:09:45.574 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2022-11-07 20:09:45.580 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-11-07 20:09:45.580 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.54]
2022-11-07 20:09:45.623 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-11-07 20:09:45.623 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 863 ms
2022-11-07 20:09:47.382 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-11-07 20:09:47.641 [main] WARN  o.s.b.a.freemarker.FreeMarkerAutoConfiguration - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2022-11-07 20:09:47.695 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2022-11-07 20:09:47.696 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-11-07 20:09:47.704 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2022-11-07 20:09:47.718 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-11-07 20:09:47.797 [main] INFO  com.zhangyun.filecloud.server.ServerApplication - Started ServerApplication in 3.33 seconds (JVM running for 3.705)
2022-11-07 20:09:47.800 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server starting...
2022-11-07 20:09:47.802 [main] INFO  com.zhangyun.filecloud.server.service.NettyServer - netty server start success
2022-11-07 20:09:52.194 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"c1d20714-cff4-4ab0-a995-6777cc184d26","deviceName":"macbook air m1","messageType":5,"msgDesc":"LoginMessage","password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 20:09:52.209 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-11-07 20:09:52.278 [nioEventLoopGroup-5-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-11-07 20:09:52.308 [nioEventLoopGroup-5-1] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 110ms
2022-11-07 20:09:52.523 [nioEventLoopGroup-5-1] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","msgDesc":"LoginResponseMessage","token":"4611cc3b-4152-4c62-aa50-7d80aadd6259"}
2022-11-07 20:27:13.725 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"c1d20714-cff4-4ab0-a995-6777cc184d26","deviceName":"macbook air m1","messageType":5,"msgDesc":"LoginMessage","password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 20:27:13.727 [nioEventLoopGroup-5-2] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 2ms
2022-11-07 20:27:13.730 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","msgDesc":"LoginResponseMessage","token":"70130c39-5dc0-4e4b-9c10-efb81d3a26c3"}
2022-11-07 20:27:18.580 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"c1d20714-cff4-4ab0-a995-6777cc184d26","deviceName":"macbook air m1","messageType":5,"msgDesc":"LoginMessage","password":"1120","rootPath":"/Users/zhangyun/test","token":"70130c39-5dc0-4e4b-9c10-efb81d3a26c3","username":"zhangyun"}
2022-11-07 20:27:18.584 [nioEventLoopGroup-5-2] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 3ms
2022-11-07 20:27:18.588 [nioEventLoopGroup-5-2] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","msgDesc":"LoginResponseMessage","token":"8521a190-f12b-4280-b985-aac73b26c8b8"}
2022-11-07 20:28:58.100 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"c1d20714-cff4-4ab0-a995-6777cc184d26","deviceName":"macbook air m1","messageType":5,"msgDesc":"LoginMessage","password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 20:28:58.103 [nioEventLoopGroup-5-3] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 2ms
2022-11-07 20:28:58.105 [nioEventLoopGroup-5-3] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","msgDesc":"LoginResponseMessage","token":"273ada62-4dcc-4b4a-b8e7-004f61739a63"}
2022-11-07 20:30:00.556 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"c1d20714-cff4-4ab0-a995-6777cc184d26","deviceName":"macbook air m1","messageType":5,"msgDesc":"LoginMessage","password":"1120","rootPath":"/Users/zhangyun/test","username":"zhangyun"}
2022-11-07 20:30:00.559 [nioEventLoopGroup-5-4] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 2ms
2022-11-07 20:30:00.561 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":false,"messageType":6,"msg":"登录成功！","msgDesc":"LoginResponseMessage","token":"f231b68a-4683-4297-b367-3d1727305beb"}
2022-11-07 20:30:24.190 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceName":"macbook air m1","messageType":8,"msgDesc":"RegisterDeviceMessage","rootPath":"/Users/zhangyun/Documents/javaProject/FileCloud/rootPath","token":"f231b68a-4683-4297-b367-3d1727305beb","username":"zhangyun"}
2022-11-07 20:30:24.207 [nioEventLoopGroup-5-4] INFO  c.z.f.server.config.MetaObjectHandlerConfig - insert org.apache.ibatis.reflection.MetaObject@89591b, current: 2022-11-07 20:30:24.207
2022-11-07 20:30:24.216 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"deviceId":"933883a0-e655-49c8-a126-24166d0a2432","messageType":9,"msgDesc":"RegisterDeviceResponseMessage"}
2022-11-07 20:31:06.613 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 接收消息: {"deviceId":"933883a0-e655-49c8-a126-24166d0a2432","deviceName":"macbook air m1","messageType":5,"msgDesc":"LoginMessage","password":"1120","rootPath":"/Users/zhangyun/Documents/javaProject/FileCloud/rootPath","username":"zhangyun"}
2022-11-07 20:31:06.618 [nioEventLoopGroup-5-4] INFO  c.zhangyun.filecloud.common.aspect.TraceLogAspect - 执行方法: UserServiceImpl.selectUserByName, 参数: username:"zhangyun" ====> User{userId=1, username=zhangyun, password=c6036a69be21cb660499b75718a3ef24, createTime=Thu Nov 03 11:03:15 CST 2022, modifiedTime=Thu Nov 03 11:03:15 CST 2022}, 时间: 3ms
2022-11-07 20:31:06.623 [nioEventLoopGroup-5-4] INFO  c.z.filecloud.common.protocol.MessageCodecSharable - 发送消息: {"code":200,"isRegister":true,"messageType":6,"msg":"登录成功！","msgDesc":"LoginResponseMessage","token":"1fab01a8-3d3f-4293-a8d3-7d3ce44d8c49"}
